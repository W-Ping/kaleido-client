name: Deploy Kaleido Client
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    name: Build And Release
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout kaleido-client
        uses: actions/checkout@v4
      - name: Get Version
        id: get_version
        if: matrix.os != 'windows-latest'
        run: |
          git fetch --tags
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo version is $latestTag
          echo "VERSION=$latestTag" >> "$GITHUB_ENV"
      - name: Get latest tag
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          $verSplit = $("${{ github.ref }}" -split "/")
          $ver=$verSplit[2]
          echo "latestTag is $ver"
          echo "VERSION=$ver" >> "$GITHUB_ENV"
      - name: show version
        run: echo version is $VERSION
      # - name: Checkout kaleido-repo
      #   uses: actions/checkout@v4
      #   with:
      #     repository: wp2code/kaleido-repo
      #     ref: main
      #     path: server
      #     token: ${{ secrets.KALEIDO_TOKEN }}
      #     sparse-checkout: |
      #       jre
      #       app
      # - name: Checkout kaleido-client
      #   uses: actions/checkout@v4
      # - uses: pnpm/action-setup@v2
      #   with:
      #     version: 8.6.7
      # - name: Install NodeJs With 17
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 17
      #     cache: 'npm'
      # - name: Install Dependencies
      #   run: |
      #     pnpm install
      # - name: Build App For Windows
      #   if: matrix.os == 'windows-latest'
      #   run: pnpm run build:win
      #      - name: Build App For Macos
      #        if: matrix.os == 'macos-latest'
      #        run: |
      #          pnpm run build:mac
      #          pnpm run build:mac-arm
      # - name: Cleanup Artifacts for Windows
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     npx del-cli "dist/*" "!dist/*.exe" "!dist/*.zip" "!dist/*.yml"
      #      - name: Cleanup Artifacts for MacOS
      #        if: matrix.os == 'macos-latest'
      #        run: |
      #          npx del-cli "dist/*" "!dist/(*.dmg|*.zip|latest*.yml)"
      # - name: Show dist
      #   run: ls -R ./dist
      # - name: upload artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.os }}
      #     path: dist
      # - name: Release App
      #   id: Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     token: ${{ secrets.KALEIDO_TOKEN }}
      #     body_path: ./CHANGELOG.md
      #     files: |
      #       dist/*.exe
      #       LICENSE
      #     tag_name: ${{steps.get_version.outputs.VERSION}}
      #     name: Release ${{steps.get_version.outputs.VERSION}}
      #     prerelease: false
      #     draft: false
