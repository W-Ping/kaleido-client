name: Deploy Kaleido Client
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [windows-latest, ubuntu-latest, macos-latest ]
    name: Build And Release
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Get Version
        id: get_version
        run: |
          VER=`echo $GITHUB_REF | cut -d / -f3`
          echo "VERSION=$VER" >> "$GITHUB_OUTPUT"
      - name: Checkout kaleido-repo
        uses: actions/checkout@v4
        with:
          repository: wp2code/kaleido-repo
          ref: main
          path: server
          token: ${{ secrets.KALEIDO_TOKEN }}
          sparse-checkout: |
            jre
            app
      - name: Checkout kaleido-client
        uses: actions/checkout@v4
      - name: Install NodeJs With 18+
        uses: actions/setup-node@v4
        with:
          node-version: 18+
      - name: Install Dependencies
        run: |
          npm i -g pnpm
          pnpm install
      - name: Build App For Windows
        if: matrix.runs-on == 'windows-latest'
        run: pnpm run build:win
      #      - name: Build App For Macos
      #        if: matrix.runs-on == 'macos-latest'
      #        run: |
      #          pnpm run build:mac
      #          pnpm run build:mac-arm
      - name: Cleanup Artifacts for Windows
        if: matrix.runs-on == 'windows-latest'
        run: |
          npx del-cli "dist/*" "!dist/*.exe" "!dist/*.zip" "!dist/*.yml"
      #      - name: Cleanup Artifacts for MacOS
      #        if: matrix.runs-on == 'macos-latest'
      #        run: |
      #          npx del-cli "dist/*" "!dist/(*.dmg|*.zip|latest*.yml)"
      - name: Show dist
        run: ls -R ./dist
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.runs-on }}
          path: dist
      - name: Release
        id: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.KALEIDO_TOKEN }}
          body_path: ./CHANGELOG.md
          files: |
            dist/*.exe
            LICENSE
          tag_name: ${{steps.get_version.outputs.VERSION}}
          name: Release ${{steps.get_version.outputs.VERSION}}
          prerelease: false
          draft: false
      
